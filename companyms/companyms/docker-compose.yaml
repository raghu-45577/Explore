services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: raghu123
      POSTGRES_PASSWORD: raghu123
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  servicereg:
    image: raghu45577/servicereg:latest
    container_name: servicereg
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
      - postgres
      - pgadmin
    networks:
      - microservice-network
      - postgres
 companyms:
   image: raghu45577/companyms:latest
   container_name: companyms
   ports:
     - "8081:8081"
   depends_on:
     - servicereg
   networks:
     - microservice-network
     - postgres
   environment:
     - SPRING_PROFILES_ACTIVE=docker
 jobms:
   image: raghu45577/jobms:latest
   container_name: jobms
   ports:
     - "8082:8082"
   depends_on:
     - servicereg
   networks:
     - microservice-network
     - postgres
   environment:
     - SPRING_PROFILES_ACTIVE=docker
     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka
 reviewms:
   image: raghu45577/reviewms:latest
   container_name: reviewms
   ports:
     - "8083:8083"
   depends_on:
     - servicereg
   networks:
     - microservice-network
     - postgres
   environment:
     - SPRING_PROFILES_ACTIVE=docker
 authms:
   image: raghu45577/authms:latest
   container_name: authms
   ports:
     - "8080:8080"
   depends_on:
     - servicereg
   networks:
     - microservice-network
     - postgres
   environment:
     - SPRING_PROFILES_ACTIVE=docker
 gateway-ms:
   image: raghu45577/gateway-ms:latest
   ports:
     - "8084:8084"
   depends_on:
     - servicereg
   networks:
     - microservice-network
     - postgres
   environment:
     - SPRING_PROFILES_ACTIVE=docker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservice-network
      - postgres

networks:
  microservice-network:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
